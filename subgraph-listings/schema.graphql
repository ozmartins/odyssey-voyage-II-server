extend schema @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key"])

type Query {
    featuredListings: [Listing]!
    searchListings(criteria: SearchListingsInput): [Listing]!
    hostListings: [Listing]!
    listing(id: ID!): Listing
    listingAmenities: [Amenity]!
}

type Listing @key(fields: "id"){
    id: ID!
    title: String!
    description: String!
    photoThumbnail: String!
    numOfBeds: Int!
    costPerNight: Float!
    locationType: LocationType!
    host: Host!
    amenities: [Amenity]
    totalCost(checkInDate: String!, checkOutDate: String!): Float!
}

type Booking @key(fields: "id") {
    id: ID!
}

type Review @key(fields: "id") {
    id: ID!
}

type Amenity {
    id: ID!
    category: AmenityCategory
    name: String!
}

interface User {
    id: ID!
}

type Host implements User @key(fields: "id") {
    id: ID!    
}

enum LocationType {
    SPACESHIP
    HOUSE
    CAMPSITE
    APARTMENT
    ROOM
}

enum AmenityCategory {
    ACCOMMODATION_DETAILS
    SPACE_SURVIVAL
    OUTDOORS
}

input SearchListingsInput {
    checkInDate: String!
    checkOutDate: String!
    numOfBeds: Int
    page: Int
    limit: Int
    sortBy: SortByCriteria
}

enum SortByCriteria {
    COST_ASC
    COST_DESC
}