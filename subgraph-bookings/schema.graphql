extend schema @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key"])
        
type Query {
  bookingsForListing(listingId: ID!, status: BookingStatus): [Booking]!
  guestBookings: [Booking]!  
  pastGuestBookings: [Booking]!  
  upcomingGuestBookings: [Booking]!  
  #esse campo está sem resolver no projeto original
  #currentGuestBooking: Booking
}

#type Mutation {
  #TODO: o resolver desta mutation exige a comunicação entre várias APIS e eu ainda não sei fazer isso do jeito certo.
  #createBooking(createBookingInput: CreateBookingInput): CreateBookingResponse!
#}

type Booking @key(fields: "id") {
  id: ID!
  listing: Listing!
  guest: Guest
  checkInDate: String!
  checkOutDate: String!
  status: BookingStatus!  
}

type Listing @key(fields: "id"){
    id: ID!
    bookings: [Booking]!
    numberOfUpcomingBookings: Int!
    currentlyBookedDates: [ReservedDate]!
}

type ReservedDate {
  checkInDate: String!
  checkOutDate: String!
}

type Guest implements User @key(fields: "id") {
  id: ID!
}

interface User {
  id: ID!
}

enum BookingStatus {
  CURRENT
  COMPLETED
  UPCOMING
}